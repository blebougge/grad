<PROG>      := # ID ; prog ID ; <CONST> <BLOCK> | # ID ; prog ID ; <BLOCK>
<BLOCK>     := begin ; <BODY> end ;
<BODY>      := <EXPR> | <IF> | <WHILE> | &
<EXPR>      := <DCLR_VAR> <BODY> | ID = <FLN> <BODY> | <FLN> <BODY>
<FLN>       := <FUNC> ; | <LOGIC> ; | <NUMERIC> ;
<LOGIC>     := ID <LOGIC'> | CONST <LOGIC'>
<LOGIC'>    := LOG ID <LOGIC'> | LOG CONST <LOGIC'> | &
<NUMERIC>   := ID = ID <NUMERIC'> | ID = CONST <NUMERIC'>
<NUMERIC'>  := OP ID <NUMERIC'> | OP CONST <NUMERIC'> | &
<FUNC>      := <FUNC_NAME>(<PARAM>) | <FUNC_NAME>()
<FUNC_NAME> := write | read
<PARAM>     := ID <PARAM'> | CONST <PARAM'>
<PARAM'>    := , ID <PARAM'> | CONST <PARAM'> | &
<IF>        := if(<LOGIC>) ; <BLOCK> <BODY>
<WHILE>     := while(<LOGIC>) ; <BLOCK> <BODY>
<CONST>     := fix <DCLR_VAR>
<DCLR_VAR>  := TYPE:ID = CONST ; | TYPE:ID = ID ;
